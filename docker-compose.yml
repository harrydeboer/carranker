version: '3.8'

services:
  web:
    build:
      dockerfile: docker/web/Dockerfile
      context: .
      args:
        uid: ${UID}
        upass: ${UPASS}
        phpversion: ${PHP_VERSION}
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./config/apache2.conf:/etc/apache2/apache2.conf
      - ./config/ports.conf:/etc/apache2/ports.conf
      - ./config/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./config/php-apache2.ini:/etc/php/${PHP_VERSION}/apache2/conf.d/php-apache2.ini
      - ./config/php-cli.ini:/etc/php/${PHP_VERSION}/cli/conf.d/php-cli.ini
    networks:
      carranker:
    container_name: carranker
    ports:
      - 80:80
      - 8080:8080
  redis:
    image: redis:5.0
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    container_name: carranker-redis
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs/redis/:/var/log/redis/
    networks:
      carranker:
        ipv4_address: ${REDIS_HOST}
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: carranker-elastic
    environment:
      - node.name=carranker-elastic
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=
      - cluster.initial_master_nodes=carranker-elastic
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTIC_PORT}:${ELASTIC_PORT}
    networks:
      carranker:
        ipv4_address: ${ELASTIC_HOST}
  database:
    image: mysql:8.0
    ports:
      - ${DB_PORT}:${DB_PORT}
    container_name: carranker-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_DEVUSER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS ${DB_DATABASE}; CREATE DATABASE IF NOT EXISTS ${TEST_DATABASE};' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    networks:
      carranker:
        ipv4_address: ${DB_HOST}
  selenium:
    image: selenium/standalone-chrome
    container_name: carranker-selenium
    networks:
      carranker:

networks:
  carranker:
    ipam:
      driver: default
      config:
        - subnet: "172.21.0.0/24"
